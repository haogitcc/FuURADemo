<UserControl x:Class="ThingMagic.URA2.ucWizardSelectReader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Stylesheet/WizardPagesTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Label Grid.Row="0" Grid.Column="0" Margin="5" Grid.ColumnSpan="2" HorizontalAlignment="Center" FontWeight="DemiBold" Content="Please Select a Reader" />

        <Label Grid.Row="1" Grid.Column="0" Margin="5" FontWeight="DemiBold" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Reader Type :"/>
        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
            <RadioButton Margin="5" VerticalAlignment="Center" Content="Serial Reader" IsChecked="{Binding IsSerialReader}" Command="{Binding ReaderTypeCheckedCommand}" />
            <RadioButton Margin="5" VerticalAlignment="Center" Content="Network Reader" IsChecked="{Binding IsNetworkReader}" Command="{Binding ReaderTypeCheckedCommand}" />
            <RadioButton x:Name="rbtnAddCustomReader" Margin="5" VerticalAlignment="Center" Content="Custom Transport Reader" IsChecked="{Binding IsAddCustomReader}" Command="{Binding ReaderTypeCheckedCommand}" />
        </StackPanel>

        <Label Grid.Row="2" Grid.Column="0" Margin="5" FontWeight="DemiBold" HorizontalAlignment="Right" VerticalAlignment="Center" Content="Reader Name :" />

        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
            <xctk:WatermarkComboBox x:Name="cbxReaderList"   Margin="5" Width="250" HorizontalAlignment="Left" ItemsSource="{Binding ReaderList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedItem="{Binding ReaderListSelectedItem}" IsEditable="True" Text="{Binding ReaderListText}" VerticalContentAlignment="Center">
                <xctk:WatermarkComboBox.Resources>
                    <Style TargetType="{x:Type xctk:WatermarkComboBox}" >
                        <!--BasedOn="{StaticResource {x:Type ComboBox}}"-->
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsNetworkReader}" Value="True">
                                <Setter Property="Watermark" Value=" ex. 10.2.0.103"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSerialReader}" Value="True">
                                <Setter Property="Watermark" Value=" ex. COM47"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <!--<DataTrigger Binding="{Binding ElementName=cbxAddManual, Path=IsChecked}" Value="True">
                                <Setter Property="IsReadOnly" Value="False" />
                                <Setter Property="IsEditable" Value="True" />
                            </DataTrigger>-->
                        </Style.Triggers>
                    </Style>
                </xctk:WatermarkComboBox.Resources>
            </xctk:WatermarkComboBox>
            <!--<ComboBox x:Name="cbxReaderList1"   Margin="5" Width="250" HorizontalAlignment="Left" ItemsSource="{Binding ReaderList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedItem="{Binding ReaderListSelectedItem}" IsEditable="True" Text="{Binding ReaderListText}">
                <ComboBox.Resources>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="False">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Resources>
            </ComboBox>-->

            <xctk:WatermarkTextBox Watermark=" ex. 172.16.16.106:5000" x:Name="txtHostIP" Margin="5" Width="250" HorizontalAlignment="Left" Text="{Binding HostAddress, UpdateSourceTrigger=PropertyChanged}">
                <xctk:WatermarkTextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </xctk:WatermarkTextBox.Style>
            </xctk:WatermarkTextBox>
            
            <!--<TextBox x:Name="txtHostIP" Margin="5" Width="250" HorizontalAlignment="Left" Text="{Binding HostAddress, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=rbtnAddCustomReader, Path=IsChecked}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>-->

            <CheckBox x:Name="cbxAddManual" Margin="5" VerticalAlignment="Center" IsChecked="{Binding IsAddManualChecked}" Content="Add Name Manually" Command="{Binding ReaderTypeCheckedCommand}" Visibility="Collapsed" />

        </StackPanel>


        

        <DockPanel Grid.Row="3" Grid.Column="1">
            <Button  Grid.Row="3" Grid.Column="1" Style="{StaticResource ButtonTheme}" Width="120" Height="30" Background="#FF25A0DA" DockPanel.Dock="Left" HorizontalAlignment="Left" Margin="5" Content="Refresh" Command="{Binding ReaderTypeCheckedCommand}"/>
            <!--<Button Style="{StaticResource ButtonTheme}" Width="120" Height="30" Background="#FF25A0DA" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="5" Content="Test Content" Command="{Binding TestCommand}"/>-->
        </DockPanel>
        

    </Grid>
</UserControl>
